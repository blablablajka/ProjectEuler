// Creator of Solution on C++: Zhukov Mike 

/*
Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих.
Начиная с 1 и 2, первые 10 элементов будут:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона. 
*/

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Замечание 1: Если в программе идёт отсчет до какого-то числа и она нереально долго не выводит результат и просит бесконечно ввести данные
// Тогда в этой программе нет выхода и чтобы его сделать, нужно после того числа до которого мы считаем поставить break и вне цикла ввести ответ
// Например: if(fib(i) > 4000000)
                 break;
// Мы считали числа фибоначчи не превышающие 4 000 000, но у нас не выводился результат ведь у цикла не было выхода после достижения 4 000 000
// Мы его добавили строчкой приведенной выше и у нас заработал код, ведь после 4 000 000 у нас появилась точка выхода

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <iostream>

using namespace std;

int fib(int N)  
{
  if (N == 1 || N == 2)
    return 1; 
  return fib(N - 1) + fib(N - 2); 
}

int main()
{
    int i1 = 0;
    int pr = 0;
    for(int i = 2; i <= 10000000; i++)
    {
        if(fib(i) <= 4000000 && fib(i) % 2 == 0)
        {
            i1 = i1 + fib(i);
        }
        if(fib(i) > 4000000)
            break;
    }
    cout<<i1;
}
